{
 "Resources": {
  "gpthandlerServiceRole7B4D8405": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/gpt-handler/ServiceRole/Resource"
   }
  },
  "gpthandlerCD26DD30": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c81878c2a9127631cb86548e94deea62a567aae303d0017b84a9de2e843a27c7"
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "gpthandlerServiceRole7B4D8405",
      "Arn"
     ]
    },
    "PackageType": "Image",
    "Timeout": 20
   },
   "DependsOn": [
    "gpthandlerServiceRole7B4D8405"
   ],
   "Metadata": {
    "aws:cdk:path": "apiStack/gpt-handler/Resource",
    "aws:asset:path": "asset.c81878c2a9127631cb86548e94deea62a567aae303d0017b84a9de2e843a27c7",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "signuphandlerServiceRoleFFA3B361": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/signup-handler/ServiceRole/Resource"
   }
  },
  "signuphandlerServiceRoleDefaultPolicy95E899CD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:AdminCreateUser",
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "cognitoStack:ExportsOutputFnGetAttPoolD3F588B8Arn63D70905"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "signuphandlerServiceRoleDefaultPolicy95E899CD",
    "Roles": [
     {
      "Ref": "signuphandlerServiceRoleFFA3B361"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/signup-handler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "signuphandler059CED7D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6484eca9b74cbec1b47632664ee02722ed6f8ddff8812049164f101dbceda9b2"
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "signuphandlerServiceRoleFFA3B361",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Fn::ImportValue": "cognitoStack:ExportsOutputRefPoolD3F588B86FF122B2"
      }
     }
    },
    "PackageType": "Image",
    "Timeout": 10
   },
   "DependsOn": [
    "signuphandlerServiceRoleDefaultPolicy95E899CD",
    "signuphandlerServiceRoleFFA3B361"
   ],
   "Metadata": {
    "aws:cdk:path": "apiStack/signup-handler/Resource",
    "aws:asset:path": "asset.6484eca9b74cbec1b47632664ee02722ed6f8ddff8812049164f101dbceda9b2",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "authhandlerServiceRoleFD523369": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/auth-handler/ServiceRole/Resource"
   }
  },
  "authhandler4D8FC56A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:fc7cd7832e0c329a3293c0f71a4533968a547b0ddeeeef171432f0950f5fc787"
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "authhandlerServiceRoleFD523369",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "APP_CLIENT_ID": {
       "Fn::ImportValue": "cognitoStack:ExportsOutputRefPoolpoolclient7F97AEC5F32C3327"
      }
     }
    },
    "PackageType": "Image",
    "Timeout": 10
   },
   "DependsOn": [
    "authhandlerServiceRoleFD523369"
   ],
   "Metadata": {
    "aws:cdk:path": "apiStack/auth-handler/Resource",
    "aws:asset:path": "asset.fc7cd7832e0c329a3293c0f71a4533968a547b0ddeeeef171432f0950f5fc787",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "challengehandlerServiceRoleB92B372C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/challenge-handler/ServiceRole/Resource"
   }
  },
  "challengehandlerServiceRoleDefaultPolicy473495D2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:RespondToAuthChalenge",
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "cognitoStack:ExportsOutputFnGetAttPoolD3F588B8Arn63D70905"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "challengehandlerServiceRoleDefaultPolicy473495D2",
    "Roles": [
     {
      "Ref": "challengehandlerServiceRoleB92B372C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/challenge-handler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "challengehandlerC65CDE01": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:7d1b822fffe3eae9d93266ff4ae1a6ae28073024401a653f53c10d265035c113"
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "challengehandlerServiceRoleB92B372C",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "APP_CLIENT_ID": {
       "Fn::ImportValue": "cognitoStack:ExportsOutputRefPoolpoolclient7F97AEC5F32C3327"
      }
     }
    },
    "PackageType": "Image",
    "Timeout": 10
   },
   "DependsOn": [
    "challengehandlerServiceRoleDefaultPolicy473495D2",
    "challengehandlerServiceRoleB92B372C"
   ],
   "Metadata": {
    "aws:cdk:path": "apiStack/challenge-handler/Resource",
    "aws:asset:path": "asset.7d1b822fffe3eae9d93266ff4ae1a6ae28073024401a653f53c10d265035c113",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "apiC8550315": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "api"
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Resource"
   }
  },
  "apiDeployment149F129409d3a8c5c8340741e3e0c7730db60aca": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "apiproxyANY7F13F09C",
    "apiproxy4EA44110",
    "apiANYB3DF8C3C",
    "apichallengePOSTD91C95EE",
    "apichallenge50FE4D6E",
    "apigptPOST0A7362A7",
    "apigptC3B62FC4",
    "apiloginPOSTAD6F9831",
    "apilogin14037FF2",
    "apisignupPOST616C2DB6",
    "apisignup6CE42055",
    "AuthorizerBD825682"
   ],
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Deployment/Resource"
   }
  },
  "apiDeploymentStageprod896C8101": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "DeploymentId": {
     "Ref": "apiDeployment149F129409d3a8c5c8340741e3e0c7730db60aca"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/DeploymentStage.prod/Resource"
   }
  },
  "apiproxy4EA44110": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/{proxy+}/Resource"
   }
  },
  "apiproxyANYApiPermissionapiStackapi57210F44ANYproxyF1FAF6DB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "signuphandler059CED7D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStageprod896C8101"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/{proxy+}/ANY/ApiPermission.apiStackapi57210F44.ANY..{proxy+}"
   }
  },
  "apiproxyANYApiPermissionTestapiStackapi57210F44ANYproxyCBAC1CB1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "signuphandler059CED7D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/{proxy+}/ANY/ApiPermission.Test.apiStackapi57210F44.ANY..{proxy+}"
   }
  },
  "apiproxyANY7F13F09C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Ref": "apiproxy4EA44110"
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "signuphandler059CED7D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/{proxy+}/ANY/Resource"
   }
  },
  "apiANYApiPermissionapiStackapi57210F44ANYA69458C2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "signuphandler059CED7D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStageprod896C8101"
       },
       "/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/ANY/ApiPermission.apiStackapi57210F44.ANY.."
   }
  },
  "apiANYApiPermissionTestapiStackapi57210F44ANYCA326E02": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "signuphandler059CED7D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/ANY/ApiPermission.Test.apiStackapi57210F44.ANY.."
   }
  },
  "apiANYB3DF8C3C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "signuphandler059CED7D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/ANY/Resource"
   }
  },
  "apigptC3B62FC4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "PathPart": "gpt",
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/gpt/Resource"
   }
  },
  "apigptPOSTApiPermissionapiStackapi57210F44POSTgptE55C4028": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "gpthandlerCD26DD30",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStageprod896C8101"
       },
       "/POST/gpt"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/gpt/POST/ApiPermission.apiStackapi57210F44.POST..gpt"
   }
  },
  "apigptPOSTApiPermissionTestapiStackapi57210F44POSTgptDB8EB5BF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "gpthandlerCD26DD30",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/POST/gpt"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/gpt/POST/ApiPermission.Test.apiStackapi57210F44.POST..gpt"
   }
  },
  "apigptPOST0A7362A7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "apigptC3B62FC4"
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "AuthorizerBD825682"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "gpthandlerCD26DD30",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/gpt/POST/Resource"
   }
  },
  "apisignup6CE42055": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "PathPart": "signup",
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/signup/Resource"
   }
  },
  "apisignupPOSTApiPermissionapiStackapi57210F44POSTsignup8F003E00": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "signuphandler059CED7D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStageprod896C8101"
       },
       "/POST/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/signup/POST/ApiPermission.apiStackapi57210F44.POST..signup"
   }
  },
  "apisignupPOSTApiPermissionTestapiStackapi57210F44POSTsignupF148628F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "signuphandler059CED7D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/POST/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/signup/POST/ApiPermission.Test.apiStackapi57210F44.POST..signup"
   }
  },
  "apisignupPOST616C2DB6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "apisignup6CE42055"
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "signuphandler059CED7D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/signup/POST/Resource"
   }
  },
  "apilogin14037FF2": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "PathPart": "login",
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/login/Resource"
   }
  },
  "apiloginPOSTApiPermissionapiStackapi57210F44POSTlogin1C4A6200": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "authhandler4D8FC56A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStageprod896C8101"
       },
       "/POST/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/login/POST/ApiPermission.apiStackapi57210F44.POST..login"
   }
  },
  "apiloginPOSTApiPermissionTestapiStackapi57210F44POSTlogin355D4B27": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "authhandler4D8FC56A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/POST/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/login/POST/ApiPermission.Test.apiStackapi57210F44.POST..login"
   }
  },
  "apiloginPOSTAD6F9831": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "apilogin14037FF2"
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "authhandler4D8FC56A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/login/POST/Resource"
   }
  },
  "apichallenge50FE4D6E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "PathPart": "challenge",
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/challenge/Resource"
   }
  },
  "apichallengePOSTApiPermissionapiStackapi57210F44POSTchallenge55E079B7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "challengehandlerC65CDE01",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStageprod896C8101"
       },
       "/POST/challenge"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/challenge/POST/ApiPermission.apiStackapi57210F44.POST..challenge"
   }
  },
  "apichallengePOSTApiPermissionTestapiStackapi57210F44POSTchallenge98C802F4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "challengehandlerC65CDE01",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/POST/challenge"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/challenge/POST/ApiPermission.Test.apiStackapi57210F44.POST..challenge"
   }
  },
  "apichallengePOSTD91C95EE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "apichallenge50FE4D6E"
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "challengehandlerC65CDE01",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/Default/challenge/POST/Resource"
   }
  },
  "AuthorizerBD825682": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "Name": "apiStackAuthorizerCDCE9A5F",
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "Type": "COGNITO_USER_POOLS",
    "IdentitySource": "method.request.header.Auth",
    "ProviderARNs": [
     {
      "Fn::ImportValue": "cognitoStack:ExportsOutputFnGetAttPoolD3F588B8Arn63D70905"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/Authorizer/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQy07DMBD8lt5T86hEz6EVEhKIKIhz5TpLusT2Rn6omCj/ju0EJZx2dnY8s+t7tt+x2w2/2q1ouq3EMxveHRddEanTILk6N5wNRxIdmGfFW3jyWjgkXRw+9RpXYBRaG7uxQK7YUJOENMi1IokiZF1GYwHCnLi14CxbuZeJSTNWQ08WHZnwyC0UvMeWO7jywIaXvFUN1pU95ogZHqGXFBRol9hVF09q8zITiHryRkB2rgx9hz9mdpvwK7gLNYma0aKiVsfdPiyYikja0se5wR8wSb1047i8yaelfNRtUr1513v3LzDiA+kGXf7FKkQbfbNje3b3sPmyiFvjtUMFrJ7qLxi5at++AQAA"
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "apiEndpoint9349E63C": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "apiC8550315"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "apiDeploymentStageprod896C8101"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}